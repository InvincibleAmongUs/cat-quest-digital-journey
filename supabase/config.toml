
# A string used to distinguish different Supabase projects on the same host. Defaults to the
# working directory name when running `supabase init`.
project_id = "grpsxolrhkerxgzrnmaq"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# Maximum rows returns in a single response. Defaults to 1000.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's.
# Run `SHOW server_version;` on the remote database to check.
major_version = 15

[db.pooler]
enabled = false
port = 54329
pool_mode = "transaction"
default_pool_size = 20
max_client_conn = 100

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually delivered,
# instead they are monitored, and you can view the emails that would have been delivered
# from the web interface.
[inbucket]
enabled = true
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:5173"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:5173"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Configure one of the supported auth providers.
# [auth.external.github]
# enabled = true
# client_id = ""
# secret = ""
# redirect_uri = ""
# Use this for mobile/desktop apps or when you need PKCE.
# enable_code_flow = false

# Use a custom external Auth provider
# [auth.external.custom_external_name]
# Build the authorization URL for the custom external provider 
# authorization_url = "https://custom-external-url.com/authorization"

# Build the token exchange URL for the custom external provider 
# token_url = "https://custom-external-url.com/token"

# Build the user info URL for the custom external provider
# userinfo_url = "https://custom-external-url.com/userinfo"

# Parse the userinfo response to extract the user's details
# parse_userinfo = "$" # "$" refers to the entire userinfo response

# Extract the user's ID
# user_id = "sub"

# Extract the primary identifier from the user (e.g., email)
# primary_email = "email"

[analytics]
enabled = false
port = 54327
vector_port = 54328
# Configure one of the supported backends.
backend = "postgres"

# Configures the JWT verifier used by PostgREST.
[jwt]
# extra_claims = ""
# The secret key used to encrypt and sign JWT tokens, required for JWT auth.
# secret_key = ""
# Realm name that will be used in the WWW-Authenticate response header. The default is "supabase".
realm = "supabase"

# Provide detailed logging levels.
[client.log]
# Logs that capture debugging information.
debug = false
# Error logs for informational events that don't cause crashes.
info = false
# Error logs for problems that prevent normal execution.
error = false
# Error logs for critical issues that cause crashes.
warn = false

# Configure the Edge Functions server.
[functions]
enabled = true
port = 54321

# Configure one of the supported compute providers.
# The default value is "supabase".
provider = "supabase"
# The supported runtimes are:
# - "deno": Deno
# - "node": Node.js
# - "bun": Bun
# - "python": Python
# - "go": Golang
default_runtime = "deno"

[functions.check-badges]
verify_jwt = true
